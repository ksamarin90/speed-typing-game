{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","textBoxRef","useRef","useEffect","setTimeout","time","trim","split","filter","word","length","calculateWordCount","ref","onChange","e","value","target","disabled","onClick","current","focus","ReactDOM","render","document","getElementById"],"mappings":"0LAiEeA,MA/Df,WACI,IADW,EAGaC,mBAAS,IAHtB,mBAGJC,EAHI,KAGEC,EAHF,OAI+BF,mBAHpB,IADX,mBAIJG,EAJI,KAIWC,EAJX,OAK+BJ,oBAAS,GALxC,mBAKJK,EALI,KAKWC,EALX,OAMuBN,mBAAS,GANhC,mBAMJO,EANI,KAMOC,EANP,KAOLC,EAAaC,iBAAO,MAmC1B,OAVAC,qBAAU,WACHN,GAAiBF,EAAgB,EAChCS,YAAW,WACPR,GAAiB,SAAAS,GAAI,OAAIA,EAAO,OACjC,MARPP,GAAiB,GACjBE,EAfJ,SAA4BP,GAExB,OADiBA,EAAKa,OAAOC,MAAM,KACnBC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,OAa/BC,CAAmBlB,OAWjC,CAACE,EAAeE,IAGf,6BACI,qDACA,8BACIe,IAAKX,EACLY,SAtCZ,SAAsBC,GAAI,IACfC,EAASD,EAAEE,OAAXD,MACPrB,EAAQqB,IAqCAA,MAAOtB,EACPwB,UAAWpB,IAEf,+CAAqBF,GACrB,4BACIuB,QAlCZ,WACIpB,GAAiB,GACjBF,EApBkB,IAqBlBF,EAAQ,IACRO,EAAWkB,QAAQF,UAAW,EAC9BhB,EAAWkB,QAAQC,SA8BXH,SAAUpB,GAFd,SAMA,2CAAiBE,KCxD7BsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b3f89c84.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\"\n\nfunction App() {\n    const STARTING_TIME = 15\n    \n    const [text, setText] = useState(\"\")\n    const [timeRemaining, setTimeRemaining] = useState(STARTING_TIME)\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\n    const [wordCount, setWordCount] = useState(0)\n    const textBoxRef = useRef(null)\n    \n    function handleChange(e) {\n        const {value} = e.target\n        setText(value)\n    }\n    \n    function calculateWordCount(text) {\n        const wordsArr = text.trim().split(\" \")\n        return wordsArr.filter(word => word !== \"\").length\n    }\n    \n    function startGame() {\n        setIsTimeRunning(true)\n        setTimeRemaining(STARTING_TIME)\n        setText(\"\")\n        textBoxRef.current.disabled = false\n        textBoxRef.current.focus()\n    }\n    \n    function endGame() {\n        setIsTimeRunning(false)\n        setWordCount(calculateWordCount(text))\n    }\n    \n    useEffect(() => {\n        if(isTimeRunning && timeRemaining > 0) {\n            setTimeout(() => {\n                setTimeRemaining(time => time - 1)\n            }, 1000)\n        } else {\n            endGame()\n        }\n    }, [timeRemaining, isTimeRunning])\n    \n    return (\n        <div>\n            <h1>How fast do you type?</h1>\n            <textarea\n                ref={textBoxRef}\n                onChange={handleChange}\n                value={text}\n                disabled={!isTimeRunning}\n            />\n            <h4>Time remaining: {timeRemaining}</h4>\n            <button \n                onClick={startGame}\n                disabled={isTimeRunning}\n            >\n                Start\n            </button>\n            <h1>Word count: {wordCount}</h1>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n\n"],"sourceRoot":""}